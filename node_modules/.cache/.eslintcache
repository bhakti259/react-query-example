[{"D:\\ReactJS\\react-query-project\\react-query\\src\\index.js":"1","D:\\ReactJS\\react-query-project\\react-query\\src\\App.js":"2","D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\home.js":"3","D:\\ReactJS\\react-query-project\\react-query\\src\\Post\\post.js":"4","D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\components\\addNewPost.js":"5","D:\\ReactJS\\react-query-project\\react-query\\src\\api\\index.js":"6"},{"size":233,"mtime":1694080451018,"results":"7","hashOfConfig":"8"},{"size":784,"mtime":1694116326792,"results":"9","hashOfConfig":"8"},{"size":4149,"mtime":1694509575641,"results":"10","hashOfConfig":"8"},{"size":1984,"mtime":1694434889857,"results":"11","hashOfConfig":"8"},{"size":2523,"mtime":1694508694167,"results":"12","hashOfConfig":"8"},{"size":3517,"mtime":1694508284659,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"2gydbf",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"D:\\ReactJS\\react-query-project\\react-query\\src\\index.js",[],[],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\App.js",[],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\home.js",["36"],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\Post\\post.js",["37"],[],"import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nimport { Container, Heading, Stack, Flex, Text, Spinner, Grid } from '@chakra-ui/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPost } from '../api';\r\nimport AddNewPost from '../Home/components/addNewPost';\r\n\r\nconst Post = () => {\r\n    const { id } = useParams(); \r\n    const { data, isLoading, error } = useQuery(['post', parseInt(id)], () => fetchPost(id));\r\n\r\n    if (isLoading) {\r\n        // Handle loading state\r\n        return (\r\n            <Grid placeItems='center' height=\"100vh\">\r\n                <Spinner\r\n                    thickness='4px'\r\n                    speed='0.65s'\r\n                    emptyColor='gray.200'\r\n                    color='blue.500'\r\n                    size='xl'\r\n                />\r\n                Loading...\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        // Handle error state\r\n        return (\r\n            <Grid placeItems='center' height=\"100vh\">\r\n                {error.message}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container maxW=\"1300px\" mt=\"4\">\r\n            <AddNewPost isUpdate={true} id={data.data.id}/>\r\n            <Flex justify=\"space-between\" mb=\"4\">\r\n                <Text>Current Post id: {id}</Text>\r\n            </Flex>\r\n                <Stack p=\"4\"\r\n                    boxShadow=\"md\"\r\n                    borderRadius=\"xl\"\r\n                    border=\"1px solid #ccc\"\r\n                    mb=\"4\"\r\n                    key={data.data.id}>\r\n                    <Flex justify=\"space-between\">\r\n                        <Text>user id: {data.data.user_id}</Text>\r\n                        <Text>Post id: {data.data.id}</Text>\r\n                    </Flex>\r\n                    <Heading fontSize=\"2xl\">{data.data.title}</Heading>\r\n                    <Text>{data.data.body}</Text>\r\n                </Stack>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\components\\addNewPost.js",["38"],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\api\\index.js",["39","40"],[],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst customAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_URL, // Your API's base URL\r\n  timeout: 5000, // Request timeout in milliseconds\r\n  headers: {\r\n    'Content-Type': 'application/json', // Set default content type\r\n    'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n  },\r\n});\r\n\r\nconst customAxios_v1 = axios.create({\r\n    baseURL: process.env.REACT_APP_URL_V1, // Your API's base URL\r\n    timeout: 5000, // Request timeout in milliseconds\r\n    headers: {\r\n      'Content-Type': 'application/json', // Set default content type\r\n      'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n    },\r\n  });\r\n\r\nexport const addNewPost = async ({ title, body }) => {\r\n    try {\r\n        const { data } = await customAxios.post(\r\n            'users/5124733/posts',\r\n            {\r\n                title,\r\n                body,\r\n            },\r\n            {\r\n            headers: {\r\n                'Content-Type': 'application/json', // Set default content type\r\n                'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n              },\r\n            }\r\n        );\r\n        console.log('data returned after post ', data);\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(error.response.statusText);\r\n    }\r\n};\r\n\r\nexport const updatePost = async ({ title, body, id }) => {\r\n    try {\r\n        const { data } = await customAxios.patch(\r\n            `/posts/${id}`,\r\n            {\r\n                title,\r\n                body,\r\n            },\r\n            { headers: {\r\n                'Content-Type': 'application/json', // Set default content type\r\n                'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n                },\r\n            }\r\n        );\r\n        console.log('data returned after update post ', data);\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(error.response.statusText);\r\n    }\r\n};\r\n\r\n\r\nexport const fetchPosts = async (id) => {\r\n    try {\r\n        const { data } = await customAxios.get(`/users/5132757/posts?timestamp=${Date.now()}`);\r\n        //const { data } = await customAxios.get(`posts?page=${id}`);     \r\n        console.log('data being fetched after fetchPosts ', data)\r\n        return data;\r\n    } catch (error) {\r\n        throw Error('Could not fetch posts');\r\n    }\r\n}\r\n\r\nexport const deletePost = async ({ id }) => {\r\n    try {\r\n      const { data } = await customAxios.delete(\r\n        `posts/${id}`,\r\n  \r\n        { headers: {\r\n            'Content-Type': 'application/json', // Set default content type\r\n            'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n            },\r\n        }\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      throw Error(error.response.statusText);\r\n    }\r\n  };\r\n\r\nexport const fetchPost = async (id) => {\r\n    //https://gorest.co.in/public/v1/posts/67955\r\n    try {\r\n        const { data } = await axios.get(`https://gorest.co.in/public/v1/posts/${id}`);\r\n        return data;\r\n    } catch (error) {\r\n        throw Error('Could not fetch post with id ', id);\r\n    }\r\n}",[],{"ruleId":null,"fatal":true,"severity":2,"message":"41","line":1,"column":9,"nodeType":null},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":12,"column":22,"nodeType":"44","messageId":"45","endLine":12,"endColumn":26},{"ruleId":"42","severity":1,"message":"47","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":13},{"ruleId":"42","severity":1,"message":"48","line":13,"column":7,"nodeType":"44","messageId":"45","endLine":13,"endColumn":21},"Parsing error: Missing semicolon. (1:9)","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'React' is defined but never used.","'customAxios_v1' is assigned a value but never used."]