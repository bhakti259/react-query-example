[{"D:\\ReactJS\\react-query-project\\react-query\\src\\index.js":"1","D:\\ReactJS\\react-query-project\\react-query\\src\\App.js":"2","D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\home.js":"3","D:\\ReactJS\\react-query-project\\react-query\\src\\Post\\post.js":"4","D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\components\\addNewPost.js":"5","D:\\ReactJS\\react-query-project\\react-query\\src\\api\\index.js":"6"},{"size":233,"mtime":1694080451018,"results":"7","hashOfConfig":"8"},{"size":784,"mtime":1694116326792,"results":"9","hashOfConfig":"8"},{"size":3060,"mtime":1694433311347,"results":"10","hashOfConfig":"8"},{"size":1984,"mtime":1694434889857,"results":"11","hashOfConfig":"8"},{"size":2523,"mtime":1694506716611,"results":"12","hashOfConfig":"8"},{"size":2385,"mtime":1694506874947,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"2gydbf",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ReactJS\\react-query-project\\react-query\\src\\index.js",[],[],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\App.js",[],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\home.js",["35"],[],"import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nimport { Container, Heading, Stack, Flex, Text, Spinner, Grid, Button } from '@chakra-ui/react';\r\nimport { useParams, Link   } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport AddNewPost from './components/addNewPost';\r\nimport { fetchPosts } from '../api';\r\n\r\n//https://gorest.co.in/public/v2/users/5124733/posts\r\nconst Home = () => {\r\n    const { id } = useParams(); \r\n    console.log('id passed via useParams hook ', id);\r\n    const parsedId = parseInt(id);\r\n    const navigate = useNavigate();\r\n\r\n    const { data, isLoading, error } = useQuery(['posts', parsedId], () => fetchPosts(parsedId));\r\n\r\n    if (isLoading) {\r\n        // Handle loading state\r\n        return (\r\n            <Grid placeItems='center' height=\"100vh\">\r\n                <Spinner\r\n                    thickness='4px'\r\n                    speed='0.65s'\r\n                    emptyColor='gray.200'\r\n                    color='blue.500'\r\n                    size='xl'\r\n                />\r\n                Loading...\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        // Handle error state\r\n        return (\r\n            <Grid placeItems='center' height=\"100vh\">\r\n                {error.message}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    const handlePrevClick = () => {\r\n        if (parsedId > 1) {\r\n            navigate(`/${parsedId - 1}`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container maxW=\"1300px\" mt=\"4\">\r\n            <AddNewPost />\r\n            <Flex justify=\"space-between\" mb=\"4\">\r\n                <Button\r\n                    colorScheme=\"red\"\r\n                    onClick={handlePrevClick}\r\n                    disabled={parsedId === 1}\r\n                    className={parsedId === 1 ? \"disabled-button\" : \"\"}\r\n                    >\r\n                    Prev\r\n                </Button>\r\n                <Text>Current Page: {parsedId}</Text>\r\n                <Button\r\n                    colorScheme=\"green\"\r\n                    onClick={() => {\r\n                        navigate(`/${parsedId + 1}`);\r\n                    }}\r\n                >\r\n                    Next\r\n                </Button>\r\n            </Flex>\r\n            {data.map((post) => (\r\n                <Link key={post.id} to={`/post/${post.id}`}>\r\n                    <Stack p=\"4\"\r\n                        boxShadow=\"md\"\r\n                        borderRadius=\"xl\"\r\n                        border=\"1px solid #ccc\"\r\n                        mb=\"4\"\r\n                        key={post.id}>\r\n                        <Flex justify=\"space-between\">\r\n                            <Text>user id: {post.user_id}</Text>\r\n                            <Text>Post id: {post.id}</Text>\r\n                        </Flex>\r\n                        <Heading fontSize=\"2xl\">{post.title}</Heading>\r\n                        <Text>{post.body}</Text>\r\n                    </Stack>\r\n                </Link>\r\n            ))}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","D:\\ReactJS\\react-query-project\\react-query\\src\\Post\\post.js",["36"],[],"import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport axios from 'axios';\r\nimport { Container, Heading, Stack, Flex, Text, Spinner, Grid } from '@chakra-ui/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchPost } from '../api';\r\nimport AddNewPost from '../Home/components/addNewPost';\r\n\r\nconst Post = () => {\r\n    const { id } = useParams(); \r\n    const { data, isLoading, error } = useQuery(['post', parseInt(id)], () => fetchPost(id));\r\n\r\n    if (isLoading) {\r\n        // Handle loading state\r\n        return (\r\n            <Grid placeItems='center' height=\"100vh\">\r\n                <Spinner\r\n                    thickness='4px'\r\n                    speed='0.65s'\r\n                    emptyColor='gray.200'\r\n                    color='blue.500'\r\n                    size='xl'\r\n                />\r\n                Loading...\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        // Handle error state\r\n        return (\r\n            <Grid placeItems='center' height=\"100vh\">\r\n                {error.message}\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container maxW=\"1300px\" mt=\"4\">\r\n            <AddNewPost isUpdate={true} id={data.data.id}/>\r\n            <Flex justify=\"space-between\" mb=\"4\">\r\n                <Text>Current Post id: {id}</Text>\r\n            </Flex>\r\n                <Stack p=\"4\"\r\n                    boxShadow=\"md\"\r\n                    borderRadius=\"xl\"\r\n                    border=\"1px solid #ccc\"\r\n                    mb=\"4\"\r\n                    key={data.data.id}>\r\n                    <Flex justify=\"space-between\">\r\n                        <Text>user id: {data.data.user_id}</Text>\r\n                        <Text>Post id: {data.data.id}</Text>\r\n                    </Flex>\r\n                    <Heading fontSize=\"2xl\">{data.data.title}</Heading>\r\n                    <Text>{data.data.body}</Text>\r\n                </Stack>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Post;\r\n","D:\\ReactJS\\react-query-project\\react-query\\src\\Home\\components\\addNewPost.js",["37"],[],"D:\\ReactJS\\react-query-project\\react-query\\src\\api\\index.js",["38","39"],[],{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},{"ruleId":"40","severity":1,"message":"41","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":13},{"ruleId":"40","severity":1,"message":"44","line":12,"column":22,"nodeType":"42","messageId":"43","endLine":12,"endColumn":26},{"ruleId":"40","severity":1,"message":"45","line":1,"column":8,"nodeType":"42","messageId":"43","endLine":1,"endColumn":13},{"ruleId":"40","severity":1,"message":"46","line":13,"column":7,"nodeType":"42","messageId":"43","endLine":13,"endColumn":21},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'React' is defined but never used.","'customAxios_v1' is assigned a value but never used."]