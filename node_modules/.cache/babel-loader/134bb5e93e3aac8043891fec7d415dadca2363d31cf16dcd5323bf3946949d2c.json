{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-query-project\\\\react-query\\\\src\\\\Home\\\\components\\\\addNewPost.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { Heading, Stack } from '@chakra-ui/react';\nimport { Formik, Form } from \"formik\";\nimport { InputControl, SubmitButton, TextareaControl } from \"formik-chakra-ui\";\nimport { useMutation } from 'react-query';\n\n///users/2974/posts\n//users/5124733/posts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewPost = () => {\n  _s();\n  const addNewPost = async ({\n    title,\n    body\n  }) => {\n    try {\n      const {\n        data\n      } = await axios.post(`https://gorest.co.in/public/v2/users/5124733/posts`, {\n        title,\n        body\n      }, {\n        headers: {\n          Authorization: \"Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6\"\n        }\n      });\n      console.log('data returned after post ', data);\n      // Invalidate the \"posts\" query to trigger a refetch\n      queryClient.invalidateQueries('posts');\n      return data;\n    } catch (error) {\n      throw Error(error.response.statusText);\n    }\n  };\n  const {\n    isLoading,\n    data,\n    error,\n    mutateAsync\n  } = useMutation('addNewPost', addNewPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: \"\",\n        body: \"\"\n      },\n      onSubmit: async values => {\n        await mutateAsync({\n          title: values.title,\n          body: values.body\n        });\n        console.log('values on adding new post ', values);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          my: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            textAlign: \"center\",\n            children: \"Add New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n            name: \"title\",\n            label: \"title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextareaControl, {\n            name: \"body\",\n            label: \"content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            children: \"Add Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(AddNewPost, \"sGDP/salGexX9gm6EL/5xIHjRpE=\", false, function () {\n  return [useMutation];\n});\n_c = AddNewPost;\nexport default AddNewPost;\nvar _c;\n$RefreshReg$(_c, \"AddNewPost\");","map":{"version":3,"names":["React","axios","Heading","Stack","Formik","Form","InputControl","SubmitButton","TextareaControl","useMutation","jsxDEV","_jsxDEV","AddNewPost","_s","addNewPost","title","body","data","post","headers","Authorization","console","log","queryClient","invalidateQueries","error","Error","response","statusText","isLoading","mutateAsync","children","initialValues","onSubmit","values","my","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","name","label","_c","$RefreshReg$"],"sources":["D:/ReactJS/react-query-project/react-query/src/Home/components/addNewPost.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Heading, Stack } from '@chakra-ui/react'\r\nimport { Formik, Form } from \"formik\";\r\nimport { InputControl, SubmitButton, TextareaControl } from \"formik-chakra-ui\";\r\nimport { useMutation } from 'react-query';\r\n\r\n///users/2974/posts\r\n//users/5124733/posts\r\nconst AddNewPost = () => {\r\n    const addNewPost = async({ title, body }) => {\r\n        try {\r\n            const { data } = await axios.post(`https://gorest.co.in/public/v2/users/5124733/posts`, {\r\n                title, body\r\n            },{\r\n                headers: {\r\n                    Authorization: \"Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6\"\r\n                }\r\n            });\r\n            console.log('data returned after post ', data);\r\n            // Invalidate the \"posts\" query to trigger a refetch\r\n      queryClient.invalidateQueries('posts');\r\n            return data;\r\n        } catch (error) {\r\n            throw Error(error.response.statusText)\r\n        }\r\n    }\r\n    const {isLoading, data, error, mutateAsync} = useMutation ('addNewPost', addNewPost)\r\n    return (\r\n        <div>\r\n            <Formik initialValues={{title: \"\", body: \"\"}}\r\n                onSubmit={async(values) => {\r\n                    await mutateAsync({ title: values.title, body: values.body})\r\n                    console.log('values on adding new post ', values)\r\n                }}>\r\n                <Form>\r\n                    <Stack my=\"4\">\r\n                        <Heading textAlign=\"center\">Add New Post</Heading>\r\n                        <InputControl name=\"title\" label=\"title\"></InputControl>\r\n                        <TextareaControl name=\"body\" label=\"content\" />\r\n                        <SubmitButton>Add Post</SubmitButton>\r\n                    </Stack>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\nexport default AddNewPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}