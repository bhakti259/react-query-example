{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\react-query-project\\\\react-query\\\\src\\\\Home\\\\components\\\\addNewPost.js\",\n  _s = $RefreshSig$();\nimport { Heading, Stack, useToast } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { InputControl, SubmitButton, TextareaControl } from \"formik-chakra-ui\";\nimport React from \"react\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { addNewPost, updatePost } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewPost = ({\n  isUpdate,\n  id\n}) => {\n  _s();\n  const toast = useToast();\n  const cache = useQueryClient();\n  const {\n    isLoading,\n    data,\n    mutateAsync\n  } = useMutation(isUpdate ? \"updatePost\" : \"addNewPost\", isUpdate ? updatePost : addNewPost, {\n    onSuccess: () => {\n      // isUpdate\n      //   ? cache.invalidateQueries([\"post\", id])\n      // :\n      cache.invalidateQueries(\"posts\");\n    },\n    onMutate: async newPost => {\n      if (isUpdate) {\n        // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\n        await cache.cancelQueries(\"post\");\n\n        // Snapshot the previous value\n        const previousPost = cache.getQueryData([\"post\", id]);\n\n        // Optimistically update to the new value\n        cache.setQueryData([\"post\", id], old => {\n          console.log(old);\n          return {\n            data: newPost\n          };\n        });\n\n        // Return a context object with the snapshotted value\n        return {\n          previousPost\n        };\n      }\n    },\n    onError: (error, newPost, context) => {\n      cache.setQueryData([\"post\", id], context.previousPost);\n      toast({\n        status: \"error\",\n        title: error.message\n      });\n    },\n    onSettled: () => {\n      // cache.invalidateQueries([\"post\", id]);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        title: \"\",\n        body: \"\"\n      },\n      onSubmit: async values => {\n        isUpdate ? await mutateAsync({\n          title: values.title,\n          body: values.body,\n          id\n        }) : await mutateAsync({\n          title: values.title,\n          body: values.body\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          my: \"4\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: \"2xl\",\n            textAlign: \"center\",\n            children: [isUpdate ? \"UPDATE\" : \"Add New\", \" Post\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n            name: \"title\",\n            label: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextareaControl, {\n            name: \"body\",\n            label: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n            isLoading: isLoading,\n            children: [isUpdate ? \"UPDATE\" : \"ADD\", \" POST\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewPost, \"fe3Fgr9swEVWdu+X5geh81EPC3s=\", false, function () {\n  return [useToast, useQueryClient, useMutation];\n});\n_c = AddNewPost;\nexport default AddNewPost;\nvar _c;\n$RefreshReg$(_c, \"AddNewPost\");","map":{"version":3,"names":["Heading","Stack","useToast","Form","Formik","InputControl","SubmitButton","TextareaControl","React","useMutation","useQueryClient","addNewPost","updatePost","jsxDEV","_jsxDEV","AddNewPost","isUpdate","id","_s","toast","cache","isLoading","data","mutateAsync","onSuccess","invalidateQueries","onMutate","newPost","cancelQueries","previousPost","getQueryData","setQueryData","old","console","log","onError","error","context","status","title","message","onSettled","children","initialValues","body","onSubmit","values","my","fontSize","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","name","label","_c","$RefreshReg$"],"sources":["D:/ReactJS/react-query-project/react-query/src/Home/components/addNewPost.js"],"sourcesContent":["import { Heading, Stack, useToast } from \"@chakra-ui/react\";\r\n\r\nimport { Form, Formik } from \"formik\";\r\nimport { InputControl, SubmitButton, TextareaControl } from \"formik-chakra-ui\";\r\nimport React from \"react\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport { addNewPost, updatePost } from \"../../api\";\r\n\r\nconst AddNewPost = ({ isUpdate, id }) => {\r\n  const toast = useToast();\r\n  const cache = useQueryClient();\r\n  const { isLoading, data, mutateAsync } = useMutation(\r\n    isUpdate ? \"updatePost\" : \"addNewPost\",\r\n    isUpdate ? updatePost : addNewPost,\r\n    {\r\n      onSuccess: () => {\r\n        // isUpdate\r\n        //   ? cache.invalidateQueries([\"post\", id])\r\n        // :\r\n        cache.invalidateQueries(\"posts\");\r\n      },\r\n\r\n      onMutate: async (newPost) => {\r\n        if (isUpdate) {\r\n          // Cancel any outgoing refetches (so they don't overwrite our optimistic update)\r\n          await cache.cancelQueries(\"post\");\r\n\r\n          // Snapshot the previous value\r\n          const previousPost = cache.getQueryData([\"post\", id]);\r\n\r\n          // Optimistically update to the new value\r\n          cache.setQueryData([\"post\", id], (old) => {\r\n            console.log(old);\r\n            return { data: newPost };\r\n          });\r\n\r\n          // Return a context object with the snapshotted value\r\n          return { previousPost };\r\n        }\r\n      },\r\n      onError: (error, newPost, context) => {\r\n        cache.setQueryData([\"post\", id], context.previousPost);\r\n        toast({ status: \"error\", title: error.message });\r\n      },\r\n      onSettled: () => {\r\n        // cache.invalidateQueries([\"post\", id]);\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ title: \"\", body: \"\" }}\r\n        onSubmit={async (values) => {\r\n          isUpdate\r\n            ? await mutateAsync({ title: values.title, body: values.body, id })\r\n            : await mutateAsync({ title: values.title, body: values.body });\r\n        }}\r\n      >\r\n        <Form>\r\n          <Stack my=\"4\">\r\n            <Heading fontSize=\"2xl\" textAlign=\"center\">\r\n              {isUpdate ? \"UPDATE\" : \"Add New\"} Post\r\n            </Heading>\r\n            <InputControl name=\"title\" label=\"Title\" />\r\n            <TextareaControl name=\"body\" label=\"Content\" />\r\n            <SubmitButton isLoading={isLoading}>\r\n              {isUpdate ? \"UPDATE\" : \"ADD\"} POST\r\n            </SubmitButton>\r\n          </Stack>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}