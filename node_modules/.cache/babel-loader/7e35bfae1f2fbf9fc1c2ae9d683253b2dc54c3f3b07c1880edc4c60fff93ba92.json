{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useQueryClient } from 'react-query';\nconst customAxios = axios.create({\n  baseURL: process.env.REACT_APP_URL,\n  // Your API's base URL\n  timeout: 5000,\n  // Request timeout in milliseconds\n  headers: {\n    'Content-Type': 'application/json',\n    // Set default content type\n    'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6' // Set default authorization token if needed\n  }\n});\n\nexport const addNewPost = async ({\n  title,\n  body\n}) => {\n  _s();\n  const queryClient = useQueryClient(); // Moved inside the function\n\n  try {\n    const {\n      data\n    } = await customAxios.post('users/5124733/posts', {\n      title,\n      body\n    }, {\n      headers: {\n        Authorization: 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6'\n      }\n    });\n    console.log('data returned after post ', data);\n\n    // Invalidate the \"posts\" query to trigger a refetch\n    queryClient.invalidateQueries('posts');\n    return data;\n  } catch (error) {\n    throw new Error(error.response.statusText);\n  }\n};\n_s(addNewPost, \"4R+oYVB2Uc11P7bp1KcuhpkfaTw=\", false, function () {\n  return [useQueryClient];\n});","map":{"version":3,"names":["React","axios","useQueryClient","customAxios","create","baseURL","process","env","REACT_APP_URL","timeout","headers","addNewPost","title","body","_s","queryClient","data","post","Authorization","console","log","invalidateQueries","error","Error","response","statusText"],"sources":["D:/ReactJS/react-query-project/react-query/src/api/index.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { useQueryClient } from 'react-query';\r\n\r\nconst customAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_URL, // Your API's base URL\r\n  timeout: 5000, // Request timeout in milliseconds\r\n  headers: {\r\n    'Content-Type': 'application/json', // Set default content type\r\n    'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n  },\r\n});\r\n\r\nexport const addNewPost = async ({ title, body }) => {\r\n  const queryClient = useQueryClient(); // Moved inside the function\r\n\r\n  try {\r\n    const { data } = await customAxios.post(\r\n      'users/5124733/posts',\r\n      {\r\n        title,\r\n        body,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6',\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log('data returned after post ', data);\r\n\r\n    // Invalidate the \"posts\" query to trigger a refetch\r\n    queryClient.invalidateQueries('posts');\r\n\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error(error.response.statusText);\r\n  }\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,aAAa;AAE5C,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,aAAa;EAAE;EACpCC,OAAO,EAAE,IAAI;EAAE;EACfC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAAE;IACpC,eAAe,EAAE,yEAAyE,CAAE;EAC9F;AACF,CAAC,CAAC;;AAEF,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAMC,WAAW,GAAGb,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEtC,IAAI;IACF,MAAM;MAAEc;IAAK,CAAC,GAAG,MAAMb,WAAW,CAACc,IAAI,CACrC,qBAAqB,EACrB;MACEL,KAAK;MACLC;IACF,CAAC,EACD;MACEH,OAAO,EAAE;QACPQ,aAAa,EACX;MACJ;IACF,CACF,CAAC;IAEDC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEJ,IAAI,CAAC;;IAE9C;IACAD,WAAW,CAACM,iBAAiB,CAAC,OAAO,CAAC;IAEtC,OAAOL,IAAI;EACb,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,QAAQ,CAACC,UAAU,CAAC;EAC5C;AACF,CAAC;AAACX,EAAA,CA3BWH,UAAU;EAAA,QACDT,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}