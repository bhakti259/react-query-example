{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nconst customAxios = axios.create({\n  baseURL: process.env.REACT_APP_URL,\n  // Your API's base URL\n  timeout: 5000,\n  // Request timeout in milliseconds\n  headers: {\n    'Content-Type': 'application/json',\n    // Set default content type\n    'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6' // Set default authorization token if needed\n  }\n});\n\nconst customAxios_v1 = axios.create({\n  baseURL: process.env.REACT_APP_URL_V1,\n  // Your API's base URL\n  timeout: 5000,\n  // Request timeout in milliseconds\n  headers: {\n    'Content-Type': 'application/json',\n    // Set default content type\n    'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6' // Set default authorization token if needed\n  }\n});\n\nexport const addNewPost = async ({\n  title,\n  body\n}) => {\n  try {\n    const {\n      data\n    } = await customAxios.post('users/5124733/posts', {\n      title,\n      body\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        // Set default content type\n        'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6' // Set default authorization token if needed\n      }\n    });\n\n    console.log('data returned after post ', data);\n    return data;\n  } catch (error) {\n    throw new Error(error.response.statusText);\n  }\n};\nexport const updatePost = async ({\n  title,\n  body,\n  id\n}) => {\n  try {\n    const {\n      data\n    } = await customAxios.patch(`/posts/${id}`, {\n      title,\n      body\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        // Set default content type\n        'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6' // Set default authorization token if needed\n      }\n    });\n\n    console.log('data returned after update post ', data);\n    return data;\n  } catch (error) {\n    throw new Error(error.response.statusText);\n  }\n};\nexport const fetchPosts = async id => {\n  try {\n    const {\n      data\n    } = await customAxios.get(`/users/5132757/posts?timestamp=${Date.now()}`);\n    //const { data } = await customAxios.get(`posts?page=${id}`);     \n    console.log('data being fetched after fetchPosts ', data);\n    return data;\n  } catch (error) {\n    throw Error('Could not fetch posts');\n  }\n};\nexport const deletePost = async ({\n  id\n}) => {\n  try {\n    const {\n      data\n    } = await customAxios.delete(`posts/${id}`, {\n      headers: {\n        Authorization: \"Bearer 007799281949d89788d14812e4014006d629ed8ccd4d8941977827f383d4643a\"\n      }\n    });\n    return data;\n  } catch (error) {\n    throw Error(error.response.statusText);\n  }\n};\nexport const fetchPost = async id => {\n  //https://gorest.co.in/public/v1/posts/67955\n  try {\n    const {\n      data\n    } = await axios.get(`https://gorest.co.in/public/v1/posts/${id}`);\n    return data;\n  } catch (error) {\n    throw Error('Could not fetch post with id ', id);\n  }\n};","map":{"version":3,"names":["React","axios","customAxios","create","baseURL","process","env","REACT_APP_URL","timeout","headers","customAxios_v1","REACT_APP_URL_V1","addNewPost","title","body","data","post","console","log","error","Error","response","statusText","updatePost","id","patch","fetchPosts","get","Date","now","deletePost","delete","Authorization","fetchPost"],"sources":["D:/ReactJS/react-query-project/react-query/src/api/index.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst customAxios = axios.create({\r\n  baseURL: process.env.REACT_APP_URL, // Your API's base URL\r\n  timeout: 5000, // Request timeout in milliseconds\r\n  headers: {\r\n    'Content-Type': 'application/json', // Set default content type\r\n    'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n  },\r\n});\r\n\r\nconst customAxios_v1 = axios.create({\r\n    baseURL: process.env.REACT_APP_URL_V1, // Your API's base URL\r\n    timeout: 5000, // Request timeout in milliseconds\r\n    headers: {\r\n      'Content-Type': 'application/json', // Set default content type\r\n      'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n    },\r\n  });\r\n\r\nexport const addNewPost = async ({ title, body }) => {\r\n    try {\r\n        const { data } = await customAxios.post(\r\n            'users/5124733/posts',\r\n            {\r\n                title,\r\n                body,\r\n            },\r\n            {\r\n            headers: {\r\n                'Content-Type': 'application/json', // Set default content type\r\n                'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n              },\r\n            }\r\n        );\r\n        console.log('data returned after post ', data);\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(error.response.statusText);\r\n    }\r\n};\r\n\r\nexport const updatePost = async ({ title, body, id }) => {\r\n    try {\r\n        const { data } = await customAxios.patch(\r\n            `/posts/${id}`,\r\n            {\r\n                title,\r\n                body,\r\n            },\r\n            { headers: {\r\n                'Content-Type': 'application/json', // Set default content type\r\n                'Authorization': 'Bearer d0a0197b6636ef3575fd06646381983572597c7ca2f7b30dccff6f59078b96a6', // Set default authorization token if needed\r\n            },\r\n            }\r\n        );\r\n        console.log('data returned after update post ', data);\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error(error.response.statusText);\r\n    }\r\n};\r\n\r\n\r\nexport const fetchPosts = async (id) => {\r\n    try {\r\n        const { data } = await customAxios.get(`/users/5132757/posts?timestamp=${Date.now()}`);\r\n        //const { data } = await customAxios.get(`posts?page=${id}`);     \r\n        console.log('data being fetched after fetchPosts ', data)\r\n        return data;\r\n    } catch (error) {\r\n        throw Error('Could not fetch posts');\r\n    }\r\n}\r\n\r\nexport const deletePost = async ({ id }) => {\r\n    try {\r\n      const { data } = await customAxios.delete(\r\n        `posts/${id}`,\r\n  \r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer 007799281949d89788d14812e4014006d629ed8ccd4d8941977827f383d4643a\",\r\n          },\r\n        }\r\n      );\r\n      return data;\r\n    } catch (error) {\r\n      throw Error(error.response.statusText);\r\n    }\r\n  };\r\n\r\nexport const fetchPost = async (id) => {\r\n    //https://gorest.co.in/public/v1/posts/67955\r\n    try {\r\n        const { data } = await axios.get(`https://gorest.co.in/public/v1/posts/${id}`);\r\n        return data;\r\n    } catch (error) {\r\n        throw Error('Could not fetch post with id ', id);\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}